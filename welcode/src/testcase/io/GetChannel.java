package testcase.io;

//: io/GetChannel.java
// Getting channels from streams
import java.nio.*;
import java.nio.channels.*;
import java.io.*;

public class GetChannel {
  private static final int BSIZE = 1024;
  private static final String filePath = "data222.txt";
  public static void main(String[] args) throws Exception {
    // Write a file:
  	//Here if the file represented by the 'filePath' does not exist, then it will create the related file,amazing
		FileChannel fc =
      new FileOutputStream(filePath).getChannel();
		//yeah here the 'wrap' method directly use the byte array as the storage for the generated ByteBuffer
    fc.write(ByteBuffer.wrap("Some text ".getBytes()));
    fc.close();
    // Add to the end of the file:
    fc =
      new RandomAccessFile(filePath, "rw").getChannel();
    fc.position(fc.size()); // Move to the end
    fc.write(ByteBuffer.wrap("Some more".getBytes()));
    fc.close();
    // Read the file:
    fc = new FileInputStream(filePath).getChannel();
    ByteBuffer buff = ByteBuffer.allocate(BSIZE);
    fc.read(buff);
    /*
     * here flip set the position to be the beginning of the bufferï¼Œ to tell
     * the buffer to have its bytes extracted
     */
    buff.flip();
    while(buff.hasRemaining())
      System.out.print((char)buff.get());
  }
} /* Output:
Some text Some more
*///:~
