1.了解Java JIT 编译器
	在主流商用JVM（HotSpot、J9）中，Java程序一开始是通过解释器（Interpreter）进行解释执行的。
当JVM发现某个方法或代码块运行特别频繁时，就会把这些代码认定为“热点代码（Hot Spot Code）”，
然后JVM会把这些代码编译成与本地平台相关的机器码，并进行各种层次的优化，
 完成这个任务的编译器称为：即时编译器（Just In Time Compiler，JIT）
 【注：Java源文件--->Java字节码--->Java虚拟机解释执行(在这一过程中JIT编译器会将高频执行的字节码编译成适宜平台的机器码，
    并保存起来)】

2.了解strictfp关键字
	strict float point


3.了解Java动态语言支持
	动态语言，是指程序在运行时可以改变其结构：新的函数可以被引进，已有的函数可以被删除等在结构上的变化。
比如JavaScript便是一个典型的动态语言。除此之外如Ruby、Python、OC等也都属于动态语言，
而C、C++、Java等语言则不属于动态语言。动态类型语言，就是类型的检查是在运行时做的，
是不是合法的要到运行时才判断，例如JavaScript就没有编译错误，只要运行错误


4.为什么Java可以称之为"准动态语言"?
	体现在以下几个方面：
　　1.反射机制

　　2.动态编译

　　3.动态执行javascript代码

　　4.动态字节码操作

　　5.动态转换类型

   Java的反射机制被视为Java为准动态语言的主要的一个关键性质，这个机制允许程序在运行时透过反射取得任何一个已知名称的class的内部信息，包括：
正在运行中的类的属性信息，正在运行中的类的方法信息，正在运行中的类的构造信息，正在运行中的类的访问修饰符，注解等等。
	
